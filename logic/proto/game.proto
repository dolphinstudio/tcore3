syntax = "proto3";
import "data.proto";

enum eError {
    unknown = 0;
    success = 1;
    already_in_game = 2;
    already_in_match = 3;
    system_http_request_error = 4;
}

enum eCProtoID {
    ClientLoginReq = 0;
    ClientMatchReq = 1;
    ClientCreateChallengeForFriendReq = 2;
    ClientJoinChallengeReq = 3;
    ClientChallengeCancelReq = 4;
    ClientGameReadyPush = 5;
    ClientSoldiersGoToBattlePush = 6;
}

enum eSProtoID {
    ServerLoginAws = 0;
    ServerMatchAws = 1;
    ServerCreateChallengeForFriendAws = 2;
    ServerChallengeCancelAws = 3;
    ServerGameStartPush = 4;
    ServerResumeGamePush = 5;

    ServerRolesGoToBattlePush = 50;
    ServerRolesLeaveBattlePush = 51;
    ServerRoleQueueUpdatePush = 52;
    ServerRoleThrustingPush = 53;
    ServerGameFrame = 54;
    ServerGameOverPush = 55;
    ServerGameStatementsPush = 56;

    ServerPointChangePush = 57;
    ServerCastSkillPush = 58;
    ServerCreateBuff = 59;
    ServerRemoveBuff = 60;
    ServerCreateSceneEffect = 61;
    ServerRemoveSceneEffect = 62;
}

enum ePlatform {
    try = 0;
    wechat = 1;
}

message oClientLoginReq {
    ePlatform platform = 1;
    int32 account = 2;
    string token = 3;
}

message oServerLoginAws {
    eError code = 1;
    oIdentity account = 2;
}

message oClientMatchReq {

}

enum eGameState {
    loading_data = 0;
    load_data_error = 1;
    loaded_data = 2;
    ready = 4;
}

enum eRoleState {
    in_queue = 0;
    in_orbit = 1;
    thrusting = 2;
}

enum eSide {
    top = 0;
    bottom = 1;
}

message oMatcherInfo {
    oUnit player_info = 1;
    repeated int32 used_card_config_id = 2;
}

message oServerMatchAws {
    eError code = 1;
    oUnit scene = 2;
    repeated oMatcherInfo matcher_info = 3;
}

message oClientCreateChallengeForFriendReq {
    
}

message oClientJoinChallengeReq {
    oIdentity challenge_id = 1;
}

message oServerCreateChallengeForFriendAws {
    eError code = 1;
    oIdentity challenge_id = 2;
}

message oClientChallengeCancelReq {

}

message oServerChallengeCancelAws {
    eError code = 1;
}

message oClientGameReadyPush {

}

message oRolesInfo {
    oIdentity account = 1;
    repeated oUnit roles = 2;
}

message oServerGameStartPush {
    repeated oRolesInfo info = 1;
}

message oClientSoldiersGoToBattlePush {
    int32 orbit_number = 1;
}

message oServerRolesGoToBattlePush {
    oIdentity account = 1;
    int32 orbit_number = 2;
    oUnit role = 3;
}

message oServerRoleQueueUpdatePush {
    repeated oUnit role = 1;
}

message oServerRolesLeaveBattlePush {
    repeated oIdentity roles = 1;
}

message oCdInfo {
    oIdentity account = 1;
    int32 cd = 2;
}

message oServerGameFrame {
    repeated oUnit roles = 1;
    repeated oCdInfo cdinfos = 2;
    int32 game_time = 3; //second
}

message oServerRoleThrustingPush {
    repeated oIdentity ids = 1;
}

message oServerPointChangePush {
    oIdentity account = 1;
    int32 point = 2;
}

message oServerCreateSceneEffect {
    oIdentity effectid = 1;
    int32 configid = 2;
    int32 oribt_number = 3;
}

message oServerRemoveSceneEffect {
    oIdentity effectid = 1;
}

message oServerCastSkillPush {
    oIdentity caster = 1;           //ʩ����
    int32 skillid = 2;          //��������id
    repeated oIdentity roles = 3;   //����Ŀ��
}

message oServerCreateBuff {
    oIdentity buffid = 1;           //buff ����id
    int32 configid = 2;         //buff ����id
    repeated oIdentity roles = 3;   //��Щ��ɫ�������buff
}

message oServerRemoveBuff {
    oIdentity buffid = 1;           //buff ����id
    int32 configid = 2;         //buff ����id
    repeated oIdentity roles = 3;   //��Щ��ɫ�������buff
}

message oServerResumeGamePush {
    oUnit scene = 1;
    eGameState player_state = 2;
    repeated oMatcherInfo matcher_info = 3;
    repeated oRolesInfo roles = 4;
    repeated oServerCreateBuff buffs = 5;
    repeated oServerCreateSceneEffect effects = 6;
    oServerRoleQueueUpdatePush role_queue = 7;
}

message oServerGameOverPush {
    
}

enum eGameResult {
    lose = 0;
    draw = 1;
    win = 2;
}

message oServerGameStatementsPush {
    eError code = 1;
    string statements_json = 2;
}
