// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data.proto

#ifndef PROTOBUF_INCLUDED_data_2eproto
#define PROTOBUF_INCLUDED_data_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_data_2eproto 

namespace protobuf_data_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_data_2eproto
class oAttribute;
class oAttributeDefaultTypeInternal;
extern oAttributeDefaultTypeInternal _oAttribute_default_instance_;
class oIdentity;
class oIdentityDefaultTypeInternal;
extern oIdentityDefaultTypeInternal _oIdentity_default_instance_;
class oUnit;
class oUnitDefaultTypeInternal;
extern oUnitDefaultTypeInternal _oUnit_default_instance_;
class oUnit_AttresEntry_DoNotUse;
class oUnit_AttresEntry_DoNotUseDefaultTypeInternal;
extern oUnit_AttresEntry_DoNotUseDefaultTypeInternal _oUnit_AttresEntry_DoNotUse_default_instance_;
class oValue;
class oValueDefaultTypeInternal;
extern oValueDefaultTypeInternal _oValue_default_instance_;
namespace google {
namespace protobuf {
template<> ::oAttribute* Arena::CreateMaybeMessage<::oAttribute>(Arena*);
template<> ::oIdentity* Arena::CreateMaybeMessage<::oIdentity>(Arena*);
template<> ::oUnit* Arena::CreateMaybeMessage<::oUnit>(Arena*);
template<> ::oUnit_AttresEntry_DoNotUse* Arena::CreateMaybeMessage<::oUnit_AttresEntry_DoNotUse>(Arena*);
template<> ::oValue* Arena::CreateMaybeMessage<::oValue>(Arena*);
}  // namespace protobuf
}  // namespace google

enum eUnit {
  player = 0,
  hercules = 1,
  buffer = 2,
  eUnit_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  eUnit_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool eUnit_IsValid(int value);
const eUnit eUnit_MIN = player;
const eUnit eUnit_MAX = buffer;
const int eUnit_ARRAYSIZE = eUnit_MAX + 1;

const ::google::protobuf::EnumDescriptor* eUnit_descriptor();
inline const ::std::string& eUnit_Name(eUnit value) {
  return ::google::protobuf::internal::NameOfEnum(
    eUnit_descriptor(), value);
}
inline bool eUnit_Parse(
    const ::std::string& name, eUnit* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eUnit>(
    eUnit_descriptor(), name, value);
}
enum eType {
  __int = 0,
  __float = 1,
  __string = 2,
  eType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  eType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool eType_IsValid(int value);
const eType eType_MIN = __int;
const eType eType_MAX = __string;
const int eType_ARRAYSIZE = eType_MAX + 1;

const ::google::protobuf::EnumDescriptor* eType_descriptor();
inline const ::std::string& eType_Name(eType value) {
  return ::google::protobuf::internal::NameOfEnum(
    eType_descriptor(), value);
}
inline bool eType_Parse(
    const ::std::string& name, eType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<eType>(
    eType_descriptor(), name, value);
}
// ===================================================================

class oIdentity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oIdentity) */ {
 public:
  oIdentity();
  virtual ~oIdentity();

  oIdentity(const oIdentity& from);

  inline oIdentity& operator=(const oIdentity& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  oIdentity(oIdentity&& from) noexcept
    : oIdentity() {
    *this = ::std::move(from);
  }

  inline oIdentity& operator=(oIdentity&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const oIdentity& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const oIdentity* internal_default_instance() {
    return reinterpret_cast<const oIdentity*>(
               &_oIdentity_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(oIdentity* other);
  friend void swap(oIdentity& a, oIdentity& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline oIdentity* New() const final {
    return CreateMaybeMessage<oIdentity>(NULL);
  }

  oIdentity* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<oIdentity>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const oIdentity& from);
  void MergeFrom(const oIdentity& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(oIdentity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 up = 1;
  void clear_up();
  static const int kUpFieldNumber = 1;
  ::google::protobuf::int32 up() const;
  void set_up(::google::protobuf::int32 value);

  // int32 down = 2;
  void clear_down();
  static const int kDownFieldNumber = 2;
  ::google::protobuf::int32 down() const;
  void set_down(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:oIdentity)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 up_;
  ::google::protobuf::int32 down_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_data_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oValue) */ {
 public:
  oValue();
  virtual ~oValue();

  oValue(const oValue& from);

  inline oValue& operator=(const oValue& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  oValue(oValue&& from) noexcept
    : oValue() {
    *this = ::std::move(from);
  }

  inline oValue& operator=(oValue&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const oValue& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const oValue* internal_default_instance() {
    return reinterpret_cast<const oValue*>(
               &_oValue_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(oValue* other);
  friend void swap(oValue& a, oValue& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline oValue* New() const final {
    return CreateMaybeMessage<oValue>(NULL);
  }

  oValue* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<oValue>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const oValue& from);
  void MergeFrom(const oValue& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(oValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string value_string = 3;
  void clear_value_string();
  static const int kValueStringFieldNumber = 3;
  const ::std::string& value_string() const;
  void set_value_string(const ::std::string& value);
  #if LANG_CXX11
  void set_value_string(::std::string&& value);
  #endif
  void set_value_string(const char* value);
  void set_value_string(const char* value, size_t size);
  ::std::string* mutable_value_string();
  ::std::string* release_value_string();
  void set_allocated_value_string(::std::string* value_string);

  // int64 value_int = 1;
  void clear_value_int();
  static const int kValueIntFieldNumber = 1;
  ::google::protobuf::int64 value_int() const;
  void set_value_int(::google::protobuf::int64 value);

  // float value_float = 2;
  void clear_value_float();
  static const int kValueFloatFieldNumber = 2;
  float value_float() const;
  void set_value_float(float value);

  // @@protoc_insertion_point(class_scope:oValue)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr value_string_;
  ::google::protobuf::int64 value_int_;
  float value_float_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_data_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oAttribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oAttribute) */ {
 public:
  oAttribute();
  virtual ~oAttribute();

  oAttribute(const oAttribute& from);

  inline oAttribute& operator=(const oAttribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  oAttribute(oAttribute&& from) noexcept
    : oAttribute() {
    *this = ::std::move(from);
  }

  inline oAttribute& operator=(oAttribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const oAttribute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const oAttribute* internal_default_instance() {
    return reinterpret_cast<const oAttribute*>(
               &_oAttribute_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(oAttribute* other);
  friend void swap(oAttribute& a, oAttribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline oAttribute* New() const final {
    return CreateMaybeMessage<oAttribute>(NULL);
  }

  oAttribute* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<oAttribute>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const oAttribute& from);
  void MergeFrom(const oAttribute& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(oAttribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .oValue value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  private:
  const ::oValue& _internal_value() const;
  public:
  const ::oValue& value() const;
  ::oValue* release_value();
  ::oValue* mutable_value();
  void set_allocated_value(::oValue* value);

  // .eType type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::eType type() const;
  void set_type(::eType value);

  // @@protoc_insertion_point(class_scope:oAttribute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::oValue* value_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_data_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class oUnit_AttresEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<oUnit_AttresEntry_DoNotUse, 
    ::std::string, ::oAttribute,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<oUnit_AttresEntry_DoNotUse, 
    ::std::string, ::oAttribute,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  oUnit_AttresEntry_DoNotUse();
  oUnit_AttresEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const oUnit_AttresEntry_DoNotUse& other);
  static const oUnit_AttresEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const oUnit_AttresEntry_DoNotUse*>(&_oUnit_AttresEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class oUnit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:oUnit) */ {
 public:
  oUnit();
  virtual ~oUnit();

  oUnit(const oUnit& from);

  inline oUnit& operator=(const oUnit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  oUnit(oUnit&& from) noexcept
    : oUnit() {
    *this = ::std::move(from);
  }

  inline oUnit& operator=(oUnit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const oUnit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const oUnit* internal_default_instance() {
    return reinterpret_cast<const oUnit*>(
               &_oUnit_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(oUnit* other);
  friend void swap(oUnit& a, oUnit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline oUnit* New() const final {
    return CreateMaybeMessage<oUnit>(NULL);
  }

  oUnit* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<oUnit>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const oUnit& from);
  void MergeFrom(const oUnit& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(oUnit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .oAttribute> attres = 2;
  int attres_size() const;
  void clear_attres();
  static const int kAttresFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::oAttribute >&
      attres() const;
  ::google::protobuf::Map< ::std::string, ::oAttribute >*
      mutable_attres();

  // .oIdentity id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::oIdentity& _internal_id() const;
  public:
  const ::oIdentity& id() const;
  ::oIdentity* release_id();
  ::oIdentity* mutable_id();
  void set_allocated_id(::oIdentity* id);

  // @@protoc_insertion_point(class_scope:oUnit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      oUnit_AttresEntry_DoNotUse,
      ::std::string, ::oAttribute,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > attres_;
  ::oIdentity* id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_data_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// oIdentity

// int32 up = 1;
inline void oIdentity::clear_up() {
  up_ = 0;
}
inline ::google::protobuf::int32 oIdentity::up() const {
  // @@protoc_insertion_point(field_get:oIdentity.up)
  return up_;
}
inline void oIdentity::set_up(::google::protobuf::int32 value) {
  
  up_ = value;
  // @@protoc_insertion_point(field_set:oIdentity.up)
}

// int32 down = 2;
inline void oIdentity::clear_down() {
  down_ = 0;
}
inline ::google::protobuf::int32 oIdentity::down() const {
  // @@protoc_insertion_point(field_get:oIdentity.down)
  return down_;
}
inline void oIdentity::set_down(::google::protobuf::int32 value) {
  
  down_ = value;
  // @@protoc_insertion_point(field_set:oIdentity.down)
}

// -------------------------------------------------------------------

// oValue

// int64 value_int = 1;
inline void oValue::clear_value_int() {
  value_int_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 oValue::value_int() const {
  // @@protoc_insertion_point(field_get:oValue.value_int)
  return value_int_;
}
inline void oValue::set_value_int(::google::protobuf::int64 value) {
  
  value_int_ = value;
  // @@protoc_insertion_point(field_set:oValue.value_int)
}

// float value_float = 2;
inline void oValue::clear_value_float() {
  value_float_ = 0;
}
inline float oValue::value_float() const {
  // @@protoc_insertion_point(field_get:oValue.value_float)
  return value_float_;
}
inline void oValue::set_value_float(float value) {
  
  value_float_ = value;
  // @@protoc_insertion_point(field_set:oValue.value_float)
}

// string value_string = 3;
inline void oValue::clear_value_string() {
  value_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& oValue::value_string() const {
  // @@protoc_insertion_point(field_get:oValue.value_string)
  return value_string_.GetNoArena();
}
inline void oValue::set_value_string(const ::std::string& value) {
  
  value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oValue.value_string)
}
#if LANG_CXX11
inline void oValue::set_value_string(::std::string&& value) {
  
  value_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oValue.value_string)
}
#endif
inline void oValue::set_value_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oValue.value_string)
}
inline void oValue::set_value_string(const char* value, size_t size) {
  
  value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oValue.value_string)
}
inline ::std::string* oValue::mutable_value_string() {
  
  // @@protoc_insertion_point(field_mutable:oValue.value_string)
  return value_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* oValue::release_value_string() {
  // @@protoc_insertion_point(field_release:oValue.value_string)
  
  return value_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void oValue::set_allocated_value_string(::std::string* value_string) {
  if (value_string != NULL) {
    
  } else {
    
  }
  value_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value_string);
  // @@protoc_insertion_point(field_set_allocated:oValue.value_string)
}

// -------------------------------------------------------------------

// oAttribute

// string name = 1;
inline void oAttribute::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& oAttribute::name() const {
  // @@protoc_insertion_point(field_get:oAttribute.name)
  return name_.GetNoArena();
}
inline void oAttribute::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:oAttribute.name)
}
#if LANG_CXX11
inline void oAttribute::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:oAttribute.name)
}
#endif
inline void oAttribute::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:oAttribute.name)
}
inline void oAttribute::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:oAttribute.name)
}
inline ::std::string* oAttribute::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:oAttribute.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* oAttribute::release_name() {
  // @@protoc_insertion_point(field_release:oAttribute.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void oAttribute::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:oAttribute.name)
}

// .eType type = 2;
inline void oAttribute::clear_type() {
  type_ = 0;
}
inline ::eType oAttribute::type() const {
  // @@protoc_insertion_point(field_get:oAttribute.type)
  return static_cast< ::eType >(type_);
}
inline void oAttribute::set_type(::eType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:oAttribute.type)
}

// .oValue value = 3;
inline bool oAttribute::has_value() const {
  return this != internal_default_instance() && value_ != NULL;
}
inline void oAttribute::clear_value() {
  if (GetArenaNoVirtual() == NULL && value_ != NULL) {
    delete value_;
  }
  value_ = NULL;
}
inline const ::oValue& oAttribute::_internal_value() const {
  return *value_;
}
inline const ::oValue& oAttribute::value() const {
  const ::oValue* p = value_;
  // @@protoc_insertion_point(field_get:oAttribute.value)
  return p != NULL ? *p : *reinterpret_cast<const ::oValue*>(
      &::_oValue_default_instance_);
}
inline ::oValue* oAttribute::release_value() {
  // @@protoc_insertion_point(field_release:oAttribute.value)
  
  ::oValue* temp = value_;
  value_ = NULL;
  return temp;
}
inline ::oValue* oAttribute::mutable_value() {
  
  if (value_ == NULL) {
    auto* p = CreateMaybeMessage<::oValue>(GetArenaNoVirtual());
    value_ = p;
  }
  // @@protoc_insertion_point(field_mutable:oAttribute.value)
  return value_;
}
inline void oAttribute::set_allocated_value(::oValue* value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete value_;
  }
  if (value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:oAttribute.value)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// oUnit

// .oIdentity id = 1;
inline bool oUnit::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline void oUnit::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
inline const ::oIdentity& oUnit::_internal_id() const {
  return *id_;
}
inline const ::oIdentity& oUnit::id() const {
  const ::oIdentity* p = id_;
  // @@protoc_insertion_point(field_get:oUnit.id)
  return p != NULL ? *p : *reinterpret_cast<const ::oIdentity*>(
      &::_oIdentity_default_instance_);
}
inline ::oIdentity* oUnit::release_id() {
  // @@protoc_insertion_point(field_release:oUnit.id)
  
  ::oIdentity* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::oIdentity* oUnit::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::oIdentity>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:oUnit.id)
  return id_;
}
inline void oUnit::set_allocated_id(::oIdentity* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete id_;
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:oUnit.id)
}

// map<string, .oAttribute> attres = 2;
inline int oUnit::attres_size() const {
  return attres_.size();
}
inline void oUnit::clear_attres() {
  attres_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::oAttribute >&
oUnit::attres() const {
  // @@protoc_insertion_point(field_map:oUnit.attres)
  return attres_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::oAttribute >*
oUnit::mutable_attres() {
  // @@protoc_insertion_point(field_mutable_map:oUnit.attres)
  return attres_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::eUnit> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eUnit>() {
  return ::eUnit_descriptor();
}
template <> struct is_proto_enum< ::eType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::eType>() {
  return ::eType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_data_2eproto
